#!/usr/bin/env python3
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Copyright 2018-2023 Toshiba Corporation and Peraton Labs, Inc.
# See README.md for license details

"""Example to demonstrate use of Metasploit API
"""

import requests
import msgpack


def main():
    """Example to demonstrate use of Metasploit API"""
    host = "127.0.0.1"
    port = 55552
    uri = '/api/'

    token = False
    headers = {"Content-type": "binary/message-pack"}
    url = f"http://{host}:{port}{uri}"

    print(f'Logging in to MSF API at {url}')
    result = requests.post(
        url,
        data=msgpack.packb(['auth.login', 'msf', 'welcome1']),
        headers=headers,
        verify=False,
    )
    response = msgpack.unpackb(result.content)
    token = response.get(b'token', '').decode('utf-8')

    print(f'Session token: {token}')
    print('Calling module.search')
    result = requests.post(
        url,
        data=msgpack.packb(['module.search', token, 'eternalblue']),
        headers=headers,
        verify=False,
    )
    modules = msgpack.unpackb(result.content)

    # Output modules
    for module in modules[:10]:
        print(module)

        fullname = module.get(b'fullname', '').decode('utf-8')
        print(f'fullname = {fullname}')
        result = requests.post(
            url,
            data=msgpack.packb(['module.info', token, '', fullname]),
            headers=headers,
            verify=False,
        )
        try:
            print(
                msgpack.unpackb(
                    result.content, strict_map_key=False, raw=False
                )
            )
        except ValueError as error:
            print('-' * 80)
            print(result.content)
            print(error)

    print('Logging out')
    result = requests.post(
        url,
        data=msgpack.packb(['auth.logout', token]),
        headers=headers,
        verify=False,
    )


if __name__ == '__main__':
    main()
